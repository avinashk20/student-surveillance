#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Apr 25 11:17:19 2023

@author: avinash
"""

import model
import matplotlib.pyplot as plt
import cv2
from pymongo import MongoClient

url = 'mongodb+srv://admin-avinash:ZV8SiWqsTzmkYo1S@cluster0.stfqxq6.mongodb.net/?retryWrites=true&w=majority'

client = MongoClient(url)

db = client.suspectsDB

mycol = db['students']

def getStudentDetails(img_path):
    query = mycol.find_one({'img_path': img_path}, {'name': 1, 'roll no': 1, '_id': 0})
    print(query)
    return query
    
def findMatch(target_embedding):
    query = mycol.aggregate([
        {
            "$addFields": {
                "target_embedding": target_embedding
            }
        }, {"$unwind": {"path": "$embedding", "includeArrayIndex": "embedding_index"}}, {"$unwind": {"path": "$target_embedding", "includeArrayIndex": "target_index"}}, {
            "$project": {
                "img_path": 1,
                "embedding": 1,
                "target_embedding": 1,
                "compare": {
                    "$cmp": ['$embedding_index', '$target_index']
                }
            }
        }, {"$match": {"compare": 0}}, {
            "$group": {
                "_id": "$img_path",
                "distance": {
                    "$sum": {
                        "$pow": [{
                            "$subtract": ['$embedding', '$target_embedding']
                        }, 2]
                    }
                }
            }
        }, {
            "$project": {
                "_id": 1                # , "distance": 1
                , "distance": {"$sqrt": "$distance"}
            }
        }, {
            "$project": {
                "_id": 1, "distance": 1, "cond": {"$lte": ["$distance", 10]}
            }
        }, {"$match": {"cond": True}}, {"$sort": {"distance": 1}}, {"$limit": 10}
    ])

    query_result = []
    
    for i in query:
        query_result.append(i)
        # print(i)
        
    return query_result

def drawBoundingBox(img, facial_area):
    x = facial_area['x']
    y = facial_area['y']
    w = facial_area['w']
    h = facial_area['h']
    img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 0), 2)
    return img

#input_img = frame
def findSuspectsMongo(input_img):
    try:
        input_representations = model.getRepresentations(input_img)
        print('found', len(input_representations), 'face(s)')
        
        found_suspects = []  # ids of matched suspects
        matched_reps = []  # ids of matched faces in input
        rep_index = 0
        for rep in input_representations:
            res = findMatch(rep['embedding'])
            
            if(len(res) > 0):
                matched_reps.append(rep_index)
                found_suspects.append(res[0]['_id'])
                
            rep_index += 1
    
        # show bounding box around found suspects
        img = input_img
        for id in matched_reps:
            facial_area = input_representations[id]['facial_area']
            x = facial_area['x']
            y = facial_area['y']
            w = facial_area['w']
            h = facial_area['h']
            img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 0), 2)
        
        img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        ### save modified_img file
        # plt.imsave('modified_img.jpeg', img)
        return {'found_suspects': found_suspects, 'modified_img': img}
    
    except Exception:
        return Exception 
    
# img_path = 'students/tanvir.jpeg'
# embedding = model.getSuspectEmbedding(img_path)
# mycol.insert_one({'embedding': embedding, 'img_path': img_path, 'name': 'Tanveer', 'roll no': 'lcs2020021'})

## testing 
# # test variables
# target_reps = [{'embedding': [0.11646043509244919, -0.7520618438720703, 0.29538390040397644, -1.7316242456436157, -1.2320489883422852, 0.4746394455432892, -0.08806409686803818, 0.7924924492835999, 0.25570186972618103, 0.5272188186645508, -0.3121641278266907, -1.3062094449996948, 0.5785533785820007, -0.6503579616546631, -0.4860052764415741, -0.1247076541185379, -1.0763963460922241, -0.7694277167320251, 1.4626270532608032, -1.7165582180023193, -0.8531451225280762, 0.9001308679580688, 2.01163387298584, 0.8504894971847534, -0.757330060005188, -0.5010661482810974, 0.29195091128349304, -1.1757700443267822, -0.026669584214687347, 0.8606435060501099, -1.6014235019683838, -1.3174073696136475, 0.29079103469848633, 0.5814031362533569, 0.274383544921875, -0.08406370878219604, -0.4954337775707245, 0.5899927616119385, 0.5681470632553101, -0.5592217445373535, 0.2937714755535126, -0.6574335694313049, 1.1195718050003052, 1.4713380336761475, 2.615666151046753, -0.386556476354599, 0.7089410424232483, 0.47689196467399597, 1.1578369140625, -0.16615262627601624, -0.7924412488937378, 0.5484600067138672, -2.003781795501709, -0.3247665762901306, -3.4015090465545654, 0.6526055335998535, -0.1295921504497528, 0.09049117565155029, -1.6062166690826416, 0.39085903763771057, 0.17461329698562622, -0.6197118163108826, -0.6391885876655579, -0.5344468355178833, -0.18649393320083618, 0.7204379439353943, -0.42023760080337524, -0.2729877233505249, -0.9931355118751526, -0.9026273488998413, -0.5547621846199036, 1.032757043838501, 0.34283092617988586, -0.763037919998169, 0.48737481236457825, -1.6686478853225708, -1.399553894996643, -0.6902575492858887, -0.6729529500007629, -0.2484492063522339, -0.5534729957580566, 0.7869738340377808, 1.0350923538208008, 0.9787251949310303, -0.1368183195590973, -1.6208124160766602, 0.8600017428398132, -0.4380950331687927, -0.4884372353553772, -0.4104117155075073, -0.028541304171085358, 0.7389331459999084, 0.9834864139556885, 1.090934157371521, 0.20495294034481049, 0.5862910747528076, -1.3369269371032715, 0.7766177654266357, -1.8437938690185547, -0.486144095659256, 1.5492392778396606, -2.544562578201294, 1.2452763319015503, 1.653921365737915, -1.0865099430084229, 0.9813340306282043, -1.279137134552002, 0.4265616238117218, -1.0039215087890625, -0.4042114317417145, 1.4166966676712036, -1.945991039276123, 0.2572990655899048, 2.0816314220428467, 0.36158961057662964, -0.6225216388702393, 1.372629165649414, -0.8692740797996521, -0.5369469523429871, 0.08108480274677277, 0.4191496968269348, 0.34991616010665894, -1.3209635019302368, 2.2759649753570557, -1.3496761322021484, -1.005200982093811, -0.8421916365623474, -0.8688887357711792], 'facial_area': {'x': 21, 'y': 155, 'w': 75, 'h': 74}}, {'embedding': [-0.6984024047851562, -0.05661492422223091, -0.32632678747177124, -0.5220495462417603, -2.045391082763672, -0.2043992280960083, -1.4278534650802612, 0.11086057126522064, 0.25978007912635803, -0.7002531290054321, 0.08705994486808777, -2.660273551940918, 0.33594173192977905, -0.27531683444976807, -0.0662115067243576, -0.4039878845214844, -0.47146663069725037, -0.31825488805770874, -0.8684190511703491, -2.652897357940674, 0.03435055911540985, 0.0374758206307888, 1.5389269590377808, -0.7767971158027649, -0.8693264126777649, -0.47602152824401855, 0.2388031780719757, -0.4555683732032776, -0.9159627556800842, 0.8007507920265198, -1.842210292816162, 0.3864938020706177, 0.7661348581314087, 0.8328536748886108, 1.5363651514053345, 0.938334584236145, 0.4684709310531616, 0.2762202322483063, 2.2420570850372314, 0.24182134866714478, 0.4682532846927643, 0.6967002153396606, -0.48144635558128357, -1.7532730102539062, 1.1624382734298706, 0.245904803276062, -0.31400567293167114, 0.08233461529016495, 0.7003098130226135, -0.8805310726165771, 0.40509217977523804, 0.008378444239497185, -0.4672337472438812, 0.48011454939842224, -0.07374191284179688, 0.35680556297302246, 1.3931584358215332, -1.458041787147522, -1.4880050420761108, -1.4215863943099976, 0.44386783242225647, -0.8315842747688293, -0.3121778666973114, -0.12171095609664917, 0.2673429250717163, -0.3466989994049072, 0.2975408434867859, -0.32227474451065063, -2.0625834465026855, -1.3826191425323486, -0.18336375057697296, 1.6867797374725342, -0.05850660428404808, -2.6851701736450195, 2.2958765029907227, -0.13263772428035736, -2.095933198928833, 0.9558898210525513, 0.1284337341785431, -1.4736716747283936, 0.8449317812919617, 1.1094799041748047, -0.5146270990371704, -0.03899821639060974, -0.6583635807037354, 0.6941981315612793, -1.5338242053985596, 0.8249819874763489, -1.6092286109924316, -0.3885074853897095, 1.5121054649353027, 2.216975212097168, 0.8295538425445557, 1.5763566493988037, 0.1534140706062317, 2.4368209838867188, -0.5666540265083313, 0.737788736820221, -1.3992969989776611, -0.6709869503974915, 1.1383899450302124, -1.537514090538025, -0.7892007827758789, -0.43332308530807495, 0.5643384456634521, 0.06824053823947906, -2.4050281047821045, 0.7171446084976196, -0.8506250977516174, 0.4928445518016815, -0.23668889701366425, -1.6772842407226562, -0.9827865362167358, 0.6511561870574951, -1.1878248453140259, -0.0929541364312172, -0.40653088688850403, -1.8415429592132568, -0.5982707738876343, 1.0928946733474731, -1.9260984659194946, -1.6796263456344604, 0.7488519549369812, -1.006982445716858, 0.11820460855960846, 0.12246894091367722, -0.05078501254320145, -0.8883182406425476], 'facial_area': {'x': 557, 'y': 149, 'w': 62, 'h': 62}}, {'embedding': [-1.2431050539016724, -1.5161428451538086, -0.8327972888946533, -0.8459476232528687, -1.0178866386413574, 0.37262213230133057, 0.42897722125053406, 0.6613280773162842, -2.3750522136688232, 0.9870284795761108, -0.8047194480895996, 0.6534693837165833, -0.0022831782698631287, -0.046833302825689316, 0.1615826040506363, 0.3790305256843567, 0.5471793413162231, -1.6826164722442627, 1.030458688735962, -1.5511435270309448, 0.5230542421340942, -1.625373363494873, 0.1305636465549469, -0.8566463589668274, 0.3550316095352173, -0.6611707210540771, 1.0660690069198608, 1.6308311223983765, 0.10370482504367828, 0.3804662227630615, -0.37315860390663147, -0.08171889185905457, 0.7648352384567261, -0.42197656631469727, 0.02841193787753582, -0.38639071583747864, -0.852794885635376, 0.09396927803754807, 0.8945168852806091, -1.9410287141799927, -0.006870731711387634, 1.8564033508300781, -0.37042778730392456, -0.2341034859418869, 0.8496739268302917, -0.8572933077812195, -0.11425493657588959, -0.840802788734436, -0.295387327671051, 0.3394731879234314, -1.9543184041976929, 0.882480800151825, 0.9118784666061401, -1.0149539709091187, -0.19216527044773102, 1.274509310722351, 0.5301212668418884, 1.2458728551864624, 0.28707805275917053, -1.200451135635376, -1.0247796773910522, 0.41307878494262695, 0.9004822969436646, 0.7147636413574219, -
facial_area': {'x': 163, 'y': 92, 'w': 107, 'h': 107}}, {'embedding': [-0.6096385717391968, -0.5735638737678528, 0.0029740482568740845, 0.4034023880958557, 2.015299081802368, -1.8399877548217773, 0.12118886411190033, 0.47710204124450684, 1.4060462713241577, -0.9148992300033569, -0.5056972503662109, -2.1261801719665527, 1.601885437965393, 0.24103951454162598, -0.465091735124588, -0.17122921347618103, -1.5214877128601074, -1.680212140083313, -0.05760720372200012, -1.1857370138168335, 0.26510223746299744, 0.8601241707801819, -0.5822044014930725, 1.623111605644226, 0.8275583982467651, -1.2285006046295166, 0.7838441133499146, -0.24128112196922302, 0.3537641763687134, 0.5382182598114014, -1.1994785070419312, -0.8855500817298889, -1.1428272724151611, 0.9565474987030029, -0.7786402106285095, -0.14403563737869263, -0.24275092780590057, -1.431141972541809, 0.5328184962272644, -1.0847333669662476, 1.237141489982605, 0.11066466569900513, 0.17421093583106995, 0.6580261588096619, 0.3324434757232666, -0.047455430030822754, 0.08643309772014618, -0.19410178065299988, 0.3081457018852234, 0.18119175732135773, -2.0816092491149902, 2.6863913536071777, -1.7198158502578735, -0.5194904208183289, -2.345297336578369, 0.21625663340091705, 2.5475077629089355, -2.1772470474243164, -1.1265381574630737, 2.660707473754883, -0.0422874316573143, 0.12466737627983093, -0.028905730694532394, 0.29375889897346497, -0.384459912776947, 0.6995916962623596, 0.2618947923183441, -0.683270275592804, -1.2156124114990234, -1.21524178981781, 0.3981631100177765, 0.5473648309707642, -1.300196647644043, -0.08210219442844391, 0.612733781337738, -0.7499039173126221, -0.48717498779296875, 0.19771425426006317, -0.4117822051048279, -0.5793879628181458, -0.12502332031726837, 1.534956693649292, 1.938774585723877, -0.203642338514328, 1.0189639329910278, -0.4661208391189575, -0.07391291111707687, 0.18141372501850128, -1.0029826164245605, -0.06083344295620918, 0.6571585536003113, 1.691465139389038, 0.8756321668624878, 0.8951862454414368, 0.5556555986404419, 1.0414643287658691, -1.7532635927200317, 0.41479894518852234, -1.3429594039916992, 0.010650549083948135, 0.7919105291366577, -1.4822585582733154, 0.24919170141220093, -0.824225127696991, 0.5107434391975403, 0.04545389115810394, -1.0854653120040894, 0.6838183403015137, -1.7913390398025513, -0.9845473766326904, 0.5539945960044861, -1.9705784320831299, 1.2340224981307983, -0.0032917186617851257, 0.48823538422584534, -0.7856696844100952, 1.7270323038101196, 0.8939455151557922, -0.5243147015571594, 1.675265908241272, 1.569571614265442, 0.22856003046035767, -0.520952582359314, -0.042648255825042725, -0.18481354415416718, -0.698546290397644, -0.8809078335762024, -0.6123719215393066], 'facial_area': {'x': 627, 'y': 155, 'w': 74, 'h': 74}}, {'embedding': [-0.4776475727558136, 0.6532262563705444, -1.061049222946167, -0.8470072150230408, -1.668067216873169, -0.19951286911964417, -2.3126308917999268, 2.14310622215271, 0.2215667963027954, 0.12753631174564362, -0.9377356171607971, -0.9040511250495911, -0.34829866886138916, 2.816434144973755, -0.6151739358901978, -0.9514999389648438, 0.3021758794784546, -1.0366158485412598, 0.5534342527389526, -0.4864473342895508, -2.0466485023498535, 0.760480523109436, -1.5892179012298584, 1.6386624574661255, -0.3993593156337738, 0.30256208777427673, -0.7338680624961853, -1.658136248588562, 0.11181670427322388, -1.6334378719329834, -0.6934372782707214, -0.5994828343391418, 0.9211446642875671, -1.2645238637924194, -0.08536501973867416, 2.0018467903137207, 1.3899245262145996, 0.40608200430870056, 1.1705656051635742, 1.2319241762161255, 0.3562324047088623, 0.3754282295703888, 1.2171794176101685, 0.6200442910194397, -0.23561690747737885, -0.05913799628615379, 0.9132005572319031, 0.9280200004577637, 0.18454252183437347, -0.8275731801986694, -0.6805479526519775, 1.8911144733428955, -1.6976557970046997, 0.09507427364587784, -0.9793984889984131, -0.59890216588974, 0.06143408268690109, 0.7068855166435242, 1.2771902084350586, 0.8579080700874329, 1.1761085987091064, -1.1046618223190308, -0.33539479970932007, 0.14843110740184784, 1.5264921188354492, 1.9438416957855225, 0.22227472066879272, 0.8478626608848572, -0.050291504710912704, 0.0698721632361412, -0.1938895434141159, 0.6974573135375977, 0.5962198376655579, 0.3138536810874939, 0.22576884925365448, -0.716154158115387, 0.6224491596221924, -0.5192366242408752, 0.20431867241859436, 0.4942423105239868, -0.1374243199825287, -0.26467013359069824, 0.567852258682251, 1.9703682661056519, -1.3693758249282837, 0.192594975233078, -1.5627458095550537, -1.075728178024292, -0.6801308393478394, -0.04057900980114937, 1.3298606872558594, -0.2338489443063736, 0.16312925517559052, -1.1663448810577393, -2.279711961746216, 2.1034393310546875, -0.39790910482406616, 1.6007906198501587, -1.6656851768493652, 0.21337421238422394, -1.728170394897461, -1.029668927192688, -0.11810854077339172, 1.2259947061538696, -1.1889269351959229, -1.247786045074463, -0.8339329957962036, 0.6720285415649414, 0.2932782471179962, 1.289003849029541, 0.5567402839660645, -2.0275707244873047, 1.780989646911621, 1.6340463161468506, -0.7893321514129639, -2.013645887374878, 0.47998109459877014, -1.015718936920166, 1.4778293371200562, 0.6197074055671692, -1.1052066087722778, -0.9510617256164551, -2.07785701751709, -0.06257915496826172, -0.7226033210754395, 0.20742842555046082, 1.8145438432693481, -1.1761304140090942], 'facial_area': {'x': 386, 'y': 88, 'w': 75, 'h': 75}}]
# target_embedding = target_reps[4]['embedding']

# test_img = '/home/avinash/Desktop/mini_project/test_img.jpeg'
# findMatch(target_embedding)
# res = findSuspectsMongo(test_img)


# ## ----------- local validation of distances --------------

# def findEuclideanDistance(source_representation, test_representation):
#     if isinstance(source_representation, list):
#         source_representation = np.array(source_representation)

#     if isinstance(test_representation, list):
#         test_representation = np.array(test_representation)

#     euclidean_distance = source_representation - test_representation
#     euclidean_distance = np.sum(np.multiply(
#         euclidean_distance, euclidean_distance))
#     euclidean_distance = np.sqrt(euclidean_distance)
#     return euclidean_distance


# sus_embeddings = []
# cursor = mycol.find()

# for i in cursor:
#     sus_embeddings.append(i)

# distances = []
# matches = []

# for sus in sus_embeddings:
#     x = findEuclideanDistance(target_embedding, sus['embedding'])
#     if(x < 10):
#         matches.append({'img_path': sus['img_path'], 'distance': x})
#     distances.append({'distance': x})

# print(distances)


# input_path = '/home/avinash/Desktop/mini_project/test_img.jpeg'
# img = plt.imread(input_path)
# for rep in target_reps:
#     facial_area = rep['facial_area']
#     x = facial_area['x']
#     y = facial_area['y']
#     w = facial_area['w']
#     h = facial_area['h']
#     img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 255, 0), 2)
#     plt.imshow(img)
#     plt.show()


# test = '/home/avinash/Desktop/mini_project/test.jpeg'
# res = findSuspectsMongo(test)



# --------- test2
# import os

# facial_img_paths = []
# for root, directory, files in os.walk("/home/avinash/Desktop/mini_project/Humans"):
#     for file in files:
#         if '.jpeg' in file:
#             facial_img_paths.append(root+"/"+file)

# sus_list = []
# for img_path iin facial_img_paths:
#     embd = model.getSuspectEmbedding(img_path)
#     sus_list.append()
    
